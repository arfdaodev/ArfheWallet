import React, { useState, useEffect } from "react";
import "./Home.css";
import Homereceivebutton from '../components/button/Homereceivingbutton';
import Bottommenu from "../components/menu/Bottommenu";
import { Homesendbutton, HomeDiscoverybutton, HomeHistorybutton, HomeRevokebutton } from "../components/button/Homesendbutton";
import Sidebar from "../components/menu/Sidebar.jsx";
import { ethers } from "ethers";
import { getWalletData } from "../utils/secureStorage";
import { JsonRpcProvider } from "ethers";

const Home = () => {
  const [walletAddress, setWalletAddress] = useState("");
  const [balance, setBalance] = useState("YÃ¼kleniyor...");
  const [error, setError] = useState("");
  const [selectedNetwork, setSelectedNetwork] = useState("holesky");
  const [provider, setProvider] = useState(null);

  const providers = {
    holesky: "https://eth-holesky.g.alchemy.com/v2/-UwtQKs82xJefcySHhrajydYbUX0leZ8",
    sepolia: "https://eth-sepolia.g.alchemy.com/v2/-UwtQKs82xJefcySHhrajydYbUX0leZ8",
  };

  // **ğŸ”¥ AÄŸÄ± deÄŸiÅŸtirdiÄŸinde yeni provider'Ä± oluÅŸtur**
  useEffect(() => {
    setProvider(new JsonRpcProvider(providers[selectedNetwork]));
    console.log(`ğŸ”„ AÄŸ deÄŸiÅŸtirildi: ${selectedNetwork}`);
  }, [selectedNetwork]);

  const handleNetworkChange = (e) => {
    setSelectedNetwork(e.target.value);
  };

  useEffect(() => {
    const fetchWalletData = async () => {
      try {
        const savedWallet = await getWalletData(localStorage.getItem("walletPassword"));
        
        if (!savedWallet || !savedWallet.privateKey) {
          setError("CÃ¼zdan adresi bulunamadÄ±!");
          return;
        }

        const wallet = new ethers.Wallet(savedWallet.privateKey);
        setWalletAddress(wallet.address);
      } catch (err) {
        console.error("CÃ¼zdan alÄ±nÄ±rken hata:", err);
        setError("CÃ¼zdan verileri Ã§Ã¶zÃ¼lemedi!");
      }
    };

    fetchWalletData();
  }, []);

  useEffect(() => {
    const fetchBalance = async () => {
      if (!walletAddress || !provider) return;

      try {
        const balanceWei = await provider.getBalance(walletAddress);
        setBalance(ethers.formatEther(balanceWei) + " ETH");
      } catch (error) {
        console.error("Bakiye alÄ±nÄ±rken hata oluÅŸtu:", error);
        setBalance("Hata!");
      }
    };

    fetchBalance();

    // ğŸ”¥ **Her 10 saniyede bir bakiyeyi gÃ¼ncelle**
    const interval = setInterval(fetchBalance, 10000);
    return () => clearInterval(interval);
  }, [walletAddress, provider]); // **âœ… provider deÄŸiÅŸtiÄŸinde de fetchBalance Ã§aÄŸrÄ±lacak!**

  useEffect(() => {
    const savedAddress = localStorage.getItem("walletAddress");
    if (savedAddress) {
      setWalletAddress(savedAddress);
    }
  }, []);

  return (
    <div className="container">
      {/* ğŸ“Œ Ãœst KÄ±sÄ±m - Hesap ve Network */}
      <div className="top-section">
        <h3 className="account-title2">Hesap</h3>
        <p className="accountname">biar.arf</p>
        <p className="wallet-address2">{walletAddress ? walletAddress : "CÃ¼zdan adresi bulunamadÄ±!"}</p>
      </div>

      <label htmlFor="network">Network: </label>
      <select id="network" value={selectedNetwork} onChange={handleNetworkChange}>
        <option value="sepolia">Sepolia'ya BaÄŸlan</option>
        <option value="holesky">Holesky'ye BaÄŸlan</option>
      </select>

      <Sidebar />
      {/* ğŸ“Œ Profil ve Bakiye */}
      <div className="profile-container">
        <img src="/image2.png" alt="Profile" className="profile-image" />
      </div>
     <h1 className="balance">{balance}</h1>
      {/* ğŸ“Œ Grafik AlanÄ± */}
      <div className="chart-container">
        <div className="chart">
          {/* Grafik KÃ¼tÃ¼phanesi ile Eklenecek */}
        </div>
      </div>

      {/* ğŸ“Œ Ä°ÅŸlem ButonlarÄ± */}
      <div className="action-buttons">
        <Homereceivebutton />
        <HomeDiscoverybutton />
        <HomeHistorybutton />
        <HomeRevokebutton />
        <Homesendbutton />
      </div>

      {/* ğŸ“Œ VarlÄ±klar */}
      <div className="assets-container">
        <h2 className="assets-title">Assets</h2>
        <div className="asset-item">1 ARF</div>
        <div className="asset-item">1 ETH</div>
        <div className="asset-item">1 BTC</div>
        <div className="asset-item">1 SOL</div>
      </div>

    
      <Bottommenu />
    </div>
  );
};

export default Home;
